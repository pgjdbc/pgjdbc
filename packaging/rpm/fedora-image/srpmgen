#! /bin/perl

use YAML;
use Cwd;
use File::Basename;

open (my $config_file, "<", ".srpmgen") or die "Couldn't open file: $!";

my ($config) = Load(join('', <$config_file>));

sub info
{
    print (" * @_\n");
}

my @sources = `spectool $config->{spec} -S`;
if ($? >> 8) {
    die ("can't successfully run 'spectool'");
}

sub obtain_source
{
    my ($id, $config) = @_;
    my $tarball_dir = cwd();

    if (defined ($config->{git_archive})) {
        my $srcdir = ".";

        if (defined ($config->{repo}))
        {
            # This is not going to be cloned from the "main" git repo, but
            # rather from separate one.
            if (!defined $config->{repo}->{address} ||
                !defined $config->{repo}->{subdir}) {
                die ("'repo' argument in .srpmdir requires 'address' and 'subdir' sub-parameters");
            }
            $srcdir = $config->{repo}->{address};
            system ("git clone $config->{repo}->{address} ${config}->{repo}->{subdir}");
            if ($? >> 8) {
                die ("can't clone $config->{repo}->{address}");
            }
        }

        $config = $config->{git_archive};
        my $topleveldir = `cd "$srcdir" && git rev-parse --show-toplevel`;
        if ($? >> 8) {
            die ("can't get git top level directory");
        }
        chomp ($topleveldir);

        my $pfx = $config->{prefix};
        my $tarball_base = $pfx;
        info ("generating tarball $tarball_base.tar.gz from git repository");
        if (defined ($config->{tarball_base})) {
            $tarball_base = $config->{tarball_base};
        }
        system ("cd '$srcdir' && git archive --remote '$topleveldir' --prefix $pfx/ HEAD | gzip > '$tarball_dir/$tarball_base.tar.gz'");
        if ($? >> 8) {
            die ("can't generate tarball $tarball_base.tar.gz");
        }
        return;
    }

    die ("no method specified to obtain sources for '$id'\n");
}

# Go through all 'SourceN' statements in spec file.
for my $source_line (@sources)
{
    chomp $source_line;
    my ($id, $source) = split (/ /, $source_line, 2);
    $id =~ s/:$//;
    $id = lc ($id);

    if (defined ($config->{$id})) {
        obtain_source ($id, $config->{$id});
    }

    my $src_basename = basename ($source);
    if (! -f "$src_basename") {
        info ("getting sources $source");
        system ("wget", "$source");
        if ($? >> 8) {
            die ("can't wget $source");
        }
    }
}
